function detectBombs(grid: boolean[][]): number[][] {
  const dx = [-1, -1, -1, 0, 1, 1, 1, 0];
  const dy = [-1, 0, 1, 1, 1, 0, -1, -1];
  let a: number[][] = Array.from({ length: grid.length }, () => Array(grid[0].length).fill(0));

  for (let y = 0; y < grid.length; y++) {
    for (let x = 0; x < grid[0].length; x++) {
      let bomba = 0;
      for (let i = 0; i < 8; i++) {
        const ny = y + dy[i];
        const nx = x + dx[i];

        if (ny >= 0 && ny < grid.length && nx >= 0 && nx < grid[0].length && grid[ny][nx]) {
          bomba++;
        }
      }
      a[y][x] = bomba;
    }
  }
  return a;
}

/*
El Grinch ha estado haciendo de las suyas en el Polo Norte y ha sembrado bombas de carbÃ³n explosivo ðŸ’£ en la fÃ¡brica de juguetes de los duendes. Quiere que todos los juguetes queden inutilizados y por eso ha dejado una cuadrÃ­cula donde algunas celdas tienen carbÃ³n explosivo (true) y otras estÃ¡n vacÃ­as (false).

Los duendes necesitan tu ayuda para mapear las zonas peligrosas. Cada celda vacÃ­a debe mostrar un nÃºmero que indique cuÃ¡ntas bombas de carbÃ³n explosivo hay en las posiciones adyacentes, incluidas las diagonales.
*/

console.log(
  detectBombs([
    [true, false, false],
    [false, true, false],
    [false, false, false],
  ])
);
// [
//   [1, 2, 1],
//   [2, 1, 1],
//   [1, 1, 1]
// ]

console.log(
  detectBombs([
    [true, false],
    [false, false],
  ])
);
// [
//   [0, 1],
//   [1, 1]
// ]

console.log(
  detectBombs([
    [true, true],
    [false, false],
    [true, true],
  ])
);

// [
//   [1, 1],
//   [4, 4],
//   [1, 1]
// ]
// Nota: Â¿Quieres una pista? Seguro que has jugado al juego de buscaminas antesâ€¦ ðŸ˜‰
